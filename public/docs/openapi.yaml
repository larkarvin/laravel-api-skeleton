openapi: 3.0.3
info:
  title: 'Task API Test'
  description: 'This is a test API for Arvin Almario.'
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/register:
    post:
      summary: 'Register a New User.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: eyJ0eXA...
                properties:
                  token:
                    type: string
                    example: eyJ0eXA...
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the  user.'
                  example: arvin@almar.io
                name:
                  type: string
                  description: 'The name of the  user.'
                  example: 'Arvin Almario'
                password:
                  type: string
                  description: 'The password of the  user.'
                  example: ultimatepassword
              required:
                - email
                - name
                - password
      security: []
  /api/v1/login:
    post:
      summary: 'Login and request a token using email and password.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: eyJ0eXA...
                properties:
                  token:
                    type: string
                    example: eyJ0eXA...
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the  user.'
                  example: arvin@almar.io
                password:
                  type: string
                  description: 'The password of the  user.'
                  example: ultimatepassword
              required:
                - email
                - password
      security: []
  /api/v1/logout:
    post:
      summary: 'Logout or destroy Token.'
      description: "This method destroys your token\n\n- 401 on invalid authentication\n- 204 NO CONTENT on success"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: eyJ0eXA...
                properties:
                  token:
                    type: string
                    example: eyJ0eXA...
      tags:
        - Endpoints
  /api/v1/tasks:
    post:
      summary: 'Task - Create'
      description: "Store a newly created task\n\nCan store tags (array)\n\nCan store Multiple Media"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Task created successfully.'
                  data:
                    title: Urgent
                    description: 'Lorem Ipsum Dolor'
                    due_date: '2022-06-03'
                    priority: Urgent
                    updated_at: '2022-03-28T23:59:23.000000Z'
                    created_at: '2022-03-28T23:59:23.000000Z'
                    id: 42
                    task_order: 43
                    completed: false
                    archived: false
                    tags:
                      -
                        id: 1
                        name:
                          en: Electronics
                        slug:
                          en: electronics
                        type: null
                        order_column: 1
                        created_at: '2022-03-27T21:43:14.000000Z'
                        updated_at: '2022-03-27T21:43:14.000000Z'
                        pivot:
                          taggable_id: 42
                          tag_id: 1
                          taggable_type: App\Models\Task
                    media: []
                properties:
                  message:
                    type: string
                    example: 'Task created successfully.'
                  data:
                    type: object
                    example:
                      title: Urgent
                      description: 'Lorem Ipsum Dolor'
                      due_date: '2022-06-03'
                      priority: Urgent
                      updated_at: '2022-03-28T23:59:23.000000Z'
                      created_at: '2022-03-28T23:59:23.000000Z'
                      id: 42
                      task_order: 43
                      completed: false
                      archived: false
                      tags:
                        -
                          id: 1
                          name:
                            en: Electronics
                          slug:
                            en: electronics
                          type: null
                          order_column: 1
                          created_at: '2022-03-27T21:43:14.000000Z'
                          updated_at: '2022-03-27T21:43:14.000000Z'
                          pivot:
                            taggable_id: 42
                            tag_id: 1
                            taggable_type: App\Models\Task
                      media: []
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: sint
                description:
                  type: string
                  description: ''
                  example: officia
                due_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date after <code>today</code>.'
                  example: '2065-06-17'
                priority:
                  type: string
                  description: 'Must be one of <code>Urgent</code>, <code>High</code>, <code>Normal</code>, or <code>Low</code>.'
                  example: Urgent
                archived_at:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-03-29'
                completed_at:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-03-29'
                media:
                  type: array
                  description: 'Multiple file upload. Allowed Mime Types <br/>jpg, bmp, png, mp4, svg, jpeg, csv, txt, doc, docx'
                  example:
                    - null
                  items:
                    type: File
                tags:
                  type: array
                  description: 'Can include tags to this task. e.g. [''Electronics'', ''Kitchen'']'
                  example:
                    - deleniti
                  items:
                    type: String
              required:
                - title
                - description
    get:
      summary: 'Task - List Tasks'
      description: "Display a listing of the tasks. (archived are hidden)\n\nArchived tasks are hidden\n/GET Tasks\n\n**Archived Tasks will only appear if parameters archived_at_from is present**\n\n## NOTE THE BODY PARAMS BELOW ARE QUERYPARAMS"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"current_page\": 1,\n    \"data\": [\n        {\n            \"id\": 36,\n            \"user_id\": 3,\n            \"title\": \"Lorem Ipsum\",\n            \"description\": \"Dolor Sit Amet\",\n            \"due_date\": \"2022-06-07\",\n            \"priority\": \"Low\",\n            \"completed_at\": null,\n            \"created_at\": \"2022-03-28T22:57:27.000000Z\",\n            \"updated_at\": \"2022-03-28T23:26:10.000000Z\",\n            \"archived_at\": null,\n            \"deleted_at\": null,\n            \"task_order\": 37,\n            \"completed\": false,\n            \"archived\": false,\n            \"tags\": [],\n            \"media\": []\n        },\n    ],\n    \"first_page_url\": \"/api/v1/tasks?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"/api/v1/tasks?page=1\",\n    \"links\": [],\n    \"next_page_url\": null,\n    \"path\": \"/api/v1/tasks\",\n    \"per_page\": 10,\n    \"prev_page_url\": null,\n    \"to\": 6,\n    \"total\": 6\n}"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                due_date_from:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. This field is required when <code>due_date_to</code> is present. Must be a date before <code>due_date_to</code>.'
                  example: '2010-05-26'
                due_date_to:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. This field is required when <code>due_date_from</code> is present.'
                  example: '2022-03-29'
                completed_date_from:
                  type: string
                  description: 'This field is required when <code>completed_date_to</code> is present.  Must be a valid date in the format <code>Y-m-d</code>. Must be a date before <code>completed_date_to</code>.'
                  example: '1992-06-07'
                completed_date_to:
                  type: string
                  description: 'This field is required when <code>completed_date_from</code> is present.  Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-03-29'
                created_date_from:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-03-29'
                created_date_to:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-03-29'
                archived_date_from:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. This field is required when <code>archived_date_to</code> is present. Must be a date before <code>archived_date_to</code>.'
                  example: '2000-04-28'
                archived_date_to:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. This field is required when <code>archived_date_from</code> is present.'
                  example: '2022-03-29'
                sort_by:
                  type: string
                  description: 'Must be one of <code>title</code>, <code>description</code>, <code>due_date</code>, <code>created_at</code>, <code>completed_date</code>, or <code>priority</code>.'
                  example: description
                order_by:
                  type: string
                  description: 'Must be one of <code>desc</code>, <code>asc</code>, <code>DESC</code>, or <code>ASC</code>.'
                  example: ASC
                priority:
                  type: string
                  description: 'Must be one of <code>Urgent</code>, <code>High</code>, <code>Normal</code>, or <code>Low</code>.'
                  example: Low
  '/api/v1/tasks/{id}':
    get:
      summary: 'Task - FindOne'
      description: 'Display the specified task.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 37
                  title: 'Urgent Task'
                  description: 'Lorem Ipsum Dolor'
                  due_date: '2022-06-03'
                  priority: Urgent
                  order: null
                  completed_at: '2022-03-28T23:14:42.000000Z'
                  created_at: '2022-03-28T23:00:07.000000Z'
                  updated_at: '2022-03-28T23:14:42.000000Z'
                  archived_at: null
                  task_order: 38
                  completed: true
                  archived: false
                properties:
                  id:
                    type: integer
                    example: 37
                  title:
                    type: string
                    example: 'Urgent Task'
                  description:
                    type: string
                    example: 'Lorem Ipsum Dolor'
                  due_date:
                    type: string
                    example: '2022-06-03'
                  priority:
                    type: string
                    example: Urgent
                  order:
                    type: string
                    example: null
                  completed_at:
                    type: string
                    example: '2022-03-28T23:14:42.000000Z'
                  created_at:
                    type: string
                    example: '2022-03-28T23:00:07.000000Z'
                  updated_at:
                    type: string
                    example: '2022-03-28T23:14:42.000000Z'
                  archived_at:
                    type: string
                    example: null
                  task_order:
                    type: integer
                    example: 38
                  completed:
                    type: boolean
                    example: true
                  archived:
                    type: boolean
                    example: false
      tags:
        - Endpoints
    put:
      summary: 'Task - Update a Task'
      description: "Update the specified task\n\nCan store tags (array), updating tags will remove the existing tags and use the one you sent\n\nCan store Multiple Media"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Task updated successfully.'
                  data:
                    id: 33
                    title: 'Low Task'
                    description: 'The quick brown fox'
                    due_date: '2022-06-07'
                    priority: High
                    order: null
                    completed_at: '2022-06-07T00:00:00.000000Z'
                    created_at: '2022-03-28T22:57:27.000000Z'
                    updated_at: '2022-03-29T00:04:58.000000Z'
                    archived_at: null
                    task_order: 37
                    completed: true
                    archived: false
                    tags: []
                    media: []
                properties:
                  message:
                    type: string
                    example: 'Task updated successfully.'
                  data:
                    type: object
                    example:
                      id: 33
                      title: 'Low Task'
                      description: 'The quick brown fox'
                      due_date: '2022-06-07'
                      priority: High
                      order: null
                      completed_at: '2022-06-07T00:00:00.000000Z'
                      created_at: '2022-03-28T22:57:27.000000Z'
                      updated_at: '2022-03-29T00:04:58.000000Z'
                      archived_at: null
                      task_order: 37
                      completed: true
                      archived: false
                      tags: []
                      media: []
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: id
                description:
                  type: string
                  description: ''
                  example: corporis
                due_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date after <code>today</code>.'
                  example: '2055-12-18'
                priority:
                  type: string
                  description: 'Must be one of <code>Urgent</code>, <code>High</code>, <code>Normal</code>, or <code>Low</code>.'
                  example: Normal
                archived_at:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-03-29'
                completed_at:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-03-29'
                media:
                  type: array
                  description: 'Multiple file upload. Allowed Mime Types <br/>jpg, bmp, png, mp4, svg, jpeg, csv, txt, doc, docx'
                  example:
                    - null
                  items:
                    type: File
                tags:
                  type: array
                  description: 'Can include tags to this task. e.g. [''Electronics'', ''Kitchen'']<br/><em>updating tags will remove the existing tags and use the one you sent</em>'
                  example:
                    - qui
                  items:
                    type: String
    delete:
      summary: 'Task - Delete'
      description: 'Remove the specified task'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tasks/{task}/complete':
    post:
      summary: 'Task - Mark as Complete'
      description: 'Mark Task as Complete and set the complete date to NOW()'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: task
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tasks/{task}/archive':
    post:
      summary: 'Task - Archive Task'
      description: "Archived a set the archive date to NOW()\nThe archive task will not appear in the listing and will not be available for update/editing"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: task
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tasks/{task}/unarchive':
    post:
      summary: 'Task - Unarchived Task'
      description: 'Unarchived an previously archived task'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: task
        description: ''
        example: 19
        required: true
        schema:
          type: integer
  '/api/v1/tasks/{task}/incomplete':
    post:
      summary: 'Task - Mark as Incomplete'
      description: 'Mark Task as Incomplete, set the complete date to NULL'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|Ikzlly2IHmq81rPgq6a7S18jRHtI0AUV32orS5sG'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: task
        description: ''
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
